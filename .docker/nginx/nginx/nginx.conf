
# Run as a less privileged user for security reasons.
user nginx;
# The maximum number of connections for Nginx is calculated by:
# max_clients = worker_processes * worker_connections
worker_processes auto;

# Maximum open file descriptors per process;
# should be > worker_connections.
# worker_rlimit_nofile 10240;

# Process needs to run in foreground within container
# //daemon off;

# Log errors and warnings to this file
# This is only used when you don't override it on a server{} level
# [ debug | info | notice | warn | error | crit | alert | emerg ] 
error_log   /var/log/nginx/error.log warn;
pid         /var/run/nginx.pid;

events {
    # When you need > 8000 * cpu_cores connections, you start optimizing your OS,
    # and this is probably the point at which you hire people who are smarter than
    # you, as this is *a lot* of requests.
    worker_connections 1024;

    # //multi_accept on;
    # //use epoll;
}

http {
    # Hide nginx version information.
    server_tokens off;

    # Rate limit configuration
    # nginx can store 160,000 ip per 10m (160,000 is limit)
    # each ip can send 1 request per seconds
    limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;
    limit_req_status 429;
    limit_req_log_level warn;

    # server {
    #     location /search/ {
    #         limit_req zone=one burst=5 nodelay;
    #     }
    # }

    # limit connection
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    # server {
    #     location /admin/ {
    #         limit_conn addr 20;
    #     }
    # }

    # Define the MIME types for files.
    include                     /etc/nginx/mime.types;
    default_type                application/octet-stream;

    # Format to use in log files
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    
    charset                     utf-8;
    sendfile                    on;
    tcp_nopush                  on;
    tcp_nodelay                 off;

    # Timeout for keep-alive connections. Server will close connections after this time. (Default: 65)
    keepalive_timeout           30;
    # Sets the maximum number of requests that can be served through one keep-alive connection. After the maximum number of requests are made, the connection is closed
    keepalive_requests          5000;
    # allow the server to close the connection after a client stops responding. Frees up socket-associated memory.
    reset_timedout_connection   off;
    # slow connections
    # send the client a "request timed out" if the body is not loaded by this time. Default 60.
    client_body_timeout         20;
    client_header_timeout       20;
    # If the client stops reading data, free up the stale client connection after this much time. Default 60.
    send_timeout                20;

    # Buffers
    client_body_buffer_size      128k;
    client_max_body_size         10m;
    client_header_buffer_size    1k;
    large_client_header_buffers  4 4k;
    output_buffers               1 32k;
    postpone_output              1460;

    # Compression
    gzip                        on;
    gzip_http_version           1.1;
    gzip_comp_level             5;
    gzip_min_length             256;
    gzip_proxied                any;
    gzip_vary                   on;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/rss+xml
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/svg+xml
        image/x-icon
        text/css
        text/plain
        text/x-component;
        # text/html

    # SSL
    ssl_protocols         TLSv1.2 TLSv1.3;
    # ssl_ciphers           HIGH:!aNULL:!MD5;
    ssl_ciphers           ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout  10m;

    include /etc/nginx/conf.d/*.conf;
}
